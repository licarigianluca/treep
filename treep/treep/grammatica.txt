																							classe 		metodo parser

Program -> StatementList EOF																	ok					ok					

StatementList -> Statement StatementTail														ok					ok		

StatementTail -> ';' StatementList | epsilon													ok					ok					

Statement -> Assignment					             |											ok					ok
             FunctionHead FunctionTail				     |
             'for' '(' Assignment ';' Guard ';' Assignment ')' Block | 	
			 'if' '(' Guard ')' Block ElseIf			     |
			 'return' Expr					     |
			 'print'  Expr

ElseIf -> 'else' Block | epsilon																ok					ok			
		

Block -> '{' StatementList '}' | Statement StatementTail												ok					ok	

Assignment -> LHandValue '=' Expr	|															ok					ok				
			  LHandValue '+=' Expr	|
			  LHandValue '-=' Expr	|
			  LHandValue '*=' Expr	|
			  LHandValue '/=' Expr	|

FunctionHead -> Id '(' ArgumentList ')' 														ok					ok		

ArgumentList -> Id ArgumentTail																	ok					ok

ArgumentTail -> ',' ArgumentList | epsilon														ok					ok		

FunctionTail -> Block | epsilon																	ok					ok

Guard -> Expr GuardTail																			ok					ok

GuardTail -> 'lt' Expr |																		ok
	     'gt' Expr |
	     '==' Expr |
	     'ge' Expr |		
	     'le' Expr |		
	     '!=' Expr 
	     

LHandValue ->	Id Htag	TupleAccess					   |										ok					ok
				'(' Id AccessTail ')' Htag TupleAccess	

Htag -> '#' | epsilon																			ok					ok

AccessTail ->  '@' Integer AccessTail	|														ok					ok
		       '@' Id AccessTail	    |
	           epsilon

TupleAccess -> '>' Integer TupleAccess	|  epsilon												ok					ok
			   '>' Id TupleAccess

Expr -> '(' Expr ')' Htag TupleAccess |																	ok					ok
		Id Htag	TupleAccess			  |
		Id AccessTail TupleAccess
		Integer						  |
		Double						  |
		String						  |
		Bool						  |
		Tree					      |
		Tupla						  |
		FunctionHead				  |
		Mul Sum				



Mul -> Factor  '*' Factor MulTail		|
		Factor  '/' Factor MulTail														ok

MulTail -> Mul | epsilon

Sum -> Factor  '+' Factor MulTail		|
		Factor  '-' Factor MulTail																ok

SumTail -> Sum | epsilon

Factor -> Integer		|													ok
		 Double			|
		 Id				|
		 String			|
		 Bool			|	
		'(' Mul Sum ')'	|
		 FunctionHead	|
		null


Tree ->	Factor '[' TreeList ']'	|													ok
	Tuple  '[' TreeList ']'	

TreeList -> TreeListHead | epsilon													ok

TreeListHead -> Tree TreeListTail													

TreeListTail -> ',' TreeListHead | epsilon												ok

Tupla -> '<' DataList '>' 

DataList -> Factor DataTail														ok

DataTail-> ',' DataList | epsilon													ok